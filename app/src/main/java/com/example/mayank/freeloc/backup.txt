package com.lovemehta.www.myapplication;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.util.ArrayList;
import java.util.List;

import android.app.Activity;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.net.wifi.ScanResult;
import android.net.wifi.WifiManager;
import android.os.Bundle;
import android.os.Environment;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

public class MainActivity extends Activity {

    ArrayList<String> allLocations = new ArrayList<String>();
    ArrayList<String> completeStuff = new ArrayList<String>();
    ArrayList<String> ssidList = new ArrayList<String>();
    ArrayList<String> bssidList= new ArrayList<String>();
    ArrayList<String> cap= new ArrayList<String>();
    ArrayList<String> level= new ArrayList<String>();
    ArrayList<String> freq= new ArrayList<String>();
    ArrayList<String> timestmp= new ArrayList<String>();
    ArrayList<String> dist= new ArrayList<String>();
    ArrayList<String> distSd= new ArrayList<String>();

    TextView mainText, recentlyAdded;
    WifiManager mainWifi;
    //WifiReceiver receiverWifi;
    List<ScanResult> wifiList;
    StringBuilder sb = new StringBuilder();
    Button addNewEntry, refresh;
    ListView listView ;

    private static final int CAMERA_REQUEST = 1888, ENTRY_REQUEST = 1999;
    private ImageView imageView;
    private String entry;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);


        listView = (ListView) findViewById(R.id.list);

        final ArrayAdapter<String> adapter = new ArrayAdapter<String>(this,
                android.R.layout.simple_list_item_1, android.R.id.text1, allLocations);

        mainText = (TextView) findViewById(R.id.mainText);
        recentlyAdded = (TextView) findViewById(R.id.heading1);

        addNewEntry = (Button) findViewById(R.id.button);

        refresh = (Button) findViewById(R.id.button2);

        /*
        mainWifi = (WifiManager) getSystemService(Context.WIFI_SERVICE);

        if (mainWifi.isWifiEnabled() == false)
        {
            Toast.makeText(getApplicationContext(), "WiFi is Disabled.. Enabling Wi-Fi !!",
                    Toast.LENGTH_LONG).show();

            mainWifi.setWifiEnabled(true);
        }

        receiverWifi = new WifiReceiver();

        registerReceiver(receiverWifi, new IntentFilter(WifiManager.SCAN_RESULTS_AVAILABLE_ACTION));
        */

        this.imageView = (ImageView)this.findViewById(R.id.imageView);

        /*

        addNewEntry.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                mainWifi.startScan();
                mainText.setText("Starting Scan...");
                completeStuff.clear(); //remember to clear others before refreshing
                listView.setAdapter(adapter);

                //Intent cameraIntent = new Intent(android.provider.MediaStore.ACTION_IMAGE_CAPTURE);
                //startActivityForResult(cameraIntent, CAMERA_REQUEST);
            }
        });

        */


        addNewEntry.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent(getApplicationContext(), generate_fingerprint.class);
                startActivityForResult(intent, ENTRY_REQUEST);

                //new FileInputStream(new File(new File(getFilesDir(),"")+File.separator+filename)


            }
        });

        refresh.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                String root = Environment.getExternalStorageDirectory().getAbsolutePath();
                File folder = new File(root+"/netapp/");
                File[] listOfFiles = folder.listFiles();

                allLocations.clear();

                for (int i = 0; i < listOfFiles.length; i++) {
                    if (listOfFiles[i].isFile()) {
                        String fname = listOfFiles[i].getName();
                        String[] piece = fname.split("\\.");

                        if(piece[piece.length-1].equalsIgnoreCase("data"))
                           allLocations.add(piece[0]);

                        //Toast.makeText(getApplicationContext(), piece[0], Toast.LENGTH_SHORT).show();
                    }
                }

                listView.setAdapter(adapter);
                //new FileInputStream(new File(new File(getFilesDir(),"")+File.separator+filename)


            }
        });

        /*final DecimalFormat df = new DecimalFormat("###.###");

        final View touchView = findViewById(R.id.list);

        touchView.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View v, MotionEvent event) {
                mainText.setText("Touch coordinates : " +
                        String.valueOf(df.format(event.getX())) + ", " + String.valueOf(df.format(event.getY())));
                return true;
            }
        });*/

    }

    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        if (requestCode == CAMERA_REQUEST && resultCode == Activity.RESULT_OK) {
            Bitmap photo = (Bitmap) data.getExtras().get("data");
            imageView.setImageBitmap(photo);
        }
        else if(requestCode == ENTRY_REQUEST && resultCode == RESULT_OK) {
                entry = data.getStringExtra("RESULT_STRING");

            try {
                    String root = Environment.getExternalStorageDirectory().getAbsolutePath();
                    FileInputStream in = new FileInputStream(root+"/netapp/"+entry+".data");
                    ObjectInputStream input = new ObjectInputStream(in);
                    fingerprint obj = (fingerprint) input.readObject();

                    Toast.makeText(getApplicationContext(), obj.ssidList.get(0).toString(), Toast.LENGTH_SHORT).show();

                    BitmapFactory.Options options = new BitmapFactory.Options();
                    options.inPreferredConfig = Bitmap.Config.ARGB_8888;
                    Bitmap bitmap = BitmapFactory.decodeFile(root+"/netapp/"+entry+".jpg", options);
                    imageView.setImageBitmap(bitmap);
                    recentlyAdded.setText("Recently Added - "+obj.location);
                }
                catch (FileNotFoundException e) {
                    e.printStackTrace();
                } catch (ClassNotFoundException e) {
                    e.printStackTrace();
                } catch (IOException e) {
                    e.printStackTrace();
                }
        }
    }

    public boolean onCreateOptionsMenu(Menu menu) {
        //menu.add(0, 0, 0, "Refresh");
        return super.onCreateOptionsMenu(menu);
    }

    public boolean onMenuItemSelected(int featureId, MenuItem item) {
        //mainWifi.startScan();
        //mainText.setText("Starting Scan");
        return super.onMenuItemSelected(featureId, item);
    }

    protected void onPause() {
        //unregisterReceiver(receiverWifi);
        super.onPause();
    }

    protected void onResume() {
        //registerReceiver(receiverWifi, new IntentFilter(WifiManager.SCAN_RESULTS_AVAILABLE_ACTION));
        super.onResume();
    }

    /*
    @Override
    public boolean onTouchEvent(MotionEvent event) {
        // MotionEvent object holds X-Y values
        if(event.getAction() == MotionEvent.ACTION_DOWN) {
            String text = "You click at x = " + event.getRawX() + " and y = " + event.getRawY();
            Toast.makeText(this, text, Toast.LENGTH_SHORT).show();
        }

        return super.onTouchEvent(event);
    }



    // Broadcast receiver class called its receive method
    // when number of wifi connections changed

    class WifiReceiver extends BroadcastReceiver {

        // This method call when number of wifi connections changed
        public void onReceive(Context c, Intent intent) {

            sb = new StringBuilder();
            wifiList = mainWifi.getScanResults();
            sb.append("\n        Number Of Wifi connections :"+wifiList.size()+"\n\n");

            for(int i = 0; i < wifiList.size(); i++){
                ssidList.add(wifiList.get(i).SSID.toString());
                bssidList.add(wifiList.get(i).BSSID.toString());
                cap.add(wifiList.get(i).capabilities.toString());
                level.add(String.valueOf(wifiList.get(i).level));
                freq.add(String.valueOf(wifiList.get(i).frequency));
                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) {
                    timestmp.add(String.valueOf(wifiList.get(i).timestamp));
                }

                completeStuff.add(new Integer(i+1).toString() +". "+wifiList.get(i).toString());

                sb.append(new Integer(i+1).toString() + ". ");
                sb.append((wifiList.get(i)).toString());
                sb.append("\n\n");
            }

            mainText.setText(" Number Of Wifi connections :"+wifiList.size());
        }

    }
    */


}



